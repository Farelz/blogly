// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login tests renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    fetch_data={[MockFunction]}
    history={
      Object {
        "goBack": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
    isLoggingIn={false}
    login_user={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="heading"
        >
          <h5>
            Welcome Back
          </h5>
          <p>
            Sign in to share your story with the world, appreciate stories you love, and more.
          </p>
        </div>,
        <div
          className="login-form"
        >
          <form
            className="row"
            onSubmit={[Function]}
          >
            <div
              className="input-field col s12"
            >
              <input
                id="email"
                onChange={[Function]}
                placeholder="Your email"
                type="text"
              />
            </div>
            <div
              className="input-field col s12"
            >
              <input
                id="password"
                onChange={[Function]}
                placeholder="Your password"
                type="password"
              />
            </div>
            <div
              className="input-field col s12"
            >
              <button
                className="btn"
                type="submit"
              >
                Submit
              </button>
              <p
                className="red-text"
              >
                
              </p>
            </div>
          </form>
        </div>,
        <div
          className="extra-info"
        >
          <p>
            No account?
            <Link
              replace={false}
              title="Sign Up"
              to="/auth/signup"
            >
               
              Sign up
            </Link>
          </p>
        </div>,
      ],
      "className": "login-section section center z-depth-1",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h5>
              Welcome Back
            </h5>,
            <p>
              Sign in to share your story with the world, appreciate stories you love, and more.
            </p>,
          ],
          "className": "heading",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Welcome Back",
            },
            "ref": null,
            "rendered": "Welcome Back",
            "type": "h5",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign in to share your story with the world, appreciate stories you love, and more.",
            },
            "ref": null,
            "rendered": "Sign in to share your story with the world, appreciate stories you love, and more.",
            "type": "p",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <form
            className="row"
            onSubmit={[Function]}
          >
            <div
              className="input-field col s12"
            >
              <input
                id="email"
                onChange={[Function]}
                placeholder="Your email"
                type="text"
              />
            </div>
            <div
              className="input-field col s12"
            >
              <input
                id="password"
                onChange={[Function]}
                placeholder="Your password"
                type="password"
              />
            </div>
            <div
              className="input-field col s12"
            >
              <button
                className="btn"
                type="submit"
              >
                Submit
              </button>
              <p
                className="red-text"
              >
                
              </p>
            </div>
          </form>,
          "className": "login-form",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="input-field col s12"
              >
                <input
                  id="email"
                  onChange={[Function]}
                  placeholder="Your email"
                  type="text"
                />
              </div>,
              <div
                className="input-field col s12"
              >
                <input
                  id="password"
                  onChange={[Function]}
                  placeholder="Your password"
                  type="password"
                />
              </div>,
              <div
                className="input-field col s12"
              >
                <button
                  className="btn"
                  type="submit"
                >
                  Submit
                </button>
                <p
                  className="red-text"
                >
                  
                </p>
              </div>,
            ],
            "className": "row",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  id="email"
                  onChange={[Function]}
                  placeholder="Your email"
                  type="text"
                />,
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "email",
                  "onChange": [Function],
                  "placeholder": "Your email",
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  id="password"
                  onChange={[Function]}
                  placeholder="Your password"
                  type="password"
                />,
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "password",
                  "onChange": [Function],
                  "placeholder": "Your password",
                  "type": "password",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <button
                    className="btn"
                    type="submit"
                  >
                    Submit
                  </button>,
                  <p
                    className="red-text"
                  >
                    
                  </p>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Submit",
                    "className": "btn",
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Submit",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "",
                    "className": "red-text",
                  },
                  "ref": null,
                  "rendered": "",
                  "type": "p",
                },
              ],
              "type": "div",
            },
          ],
          "type": "form",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p>
            No account?
            <Link
              replace={false}
              title="Sign Up"
              to="/auth/signup"
            >
               
              Sign up
            </Link>
          </p>,
          "className": "extra-info",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "No account?",
              <Link
                replace={false}
                title="Sign Up"
                to="/auth/signup"
              >
                 
                Sign up
              </Link>,
            ],
          },
          "ref": null,
          "rendered": Array [
            "No account?",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  " ",
                  "Sign up",
                ],
                "replace": false,
                "title": "Sign Up",
                "to": "/auth/signup",
              },
              "ref": null,
              "rendered": Array [
                " ",
                "Sign up",
              ],
              "type": [Function],
            },
          ],
          "type": "p",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="heading"
          >
            <h5>
              Welcome Back
            </h5>
            <p>
              Sign in to share your story with the world, appreciate stories you love, and more.
            </p>
          </div>,
          <div
            className="login-form"
          >
            <form
              className="row"
              onSubmit={[Function]}
            >
              <div
                className="input-field col s12"
              >
                <input
                  id="email"
                  onChange={[Function]}
                  placeholder="Your email"
                  type="text"
                />
              </div>
              <div
                className="input-field col s12"
              >
                <input
                  id="password"
                  onChange={[Function]}
                  placeholder="Your password"
                  type="password"
                />
              </div>
              <div
                className="input-field col s12"
              >
                <button
                  className="btn"
                  type="submit"
                >
                  Submit
                </button>
                <p
                  className="red-text"
                >
                  
                </p>
              </div>
            </form>
          </div>,
          <div
            className="extra-info"
          >
            <p>
              No account?
              <Link
                replace={false}
                title="Sign Up"
                to="/auth/signup"
              >
                 
                Sign up
              </Link>
            </p>
          </div>,
        ],
        "className": "login-section section center z-depth-1",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h5>
                Welcome Back
              </h5>,
              <p>
                Sign in to share your story with the world, appreciate stories you love, and more.
              </p>,
            ],
            "className": "heading",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Welcome Back",
              },
              "ref": null,
              "rendered": "Welcome Back",
              "type": "h5",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sign in to share your story with the world, appreciate stories you love, and more.",
              },
              "ref": null,
              "rendered": "Sign in to share your story with the world, appreciate stories you love, and more.",
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <form
              className="row"
              onSubmit={[Function]}
            >
              <div
                className="input-field col s12"
              >
                <input
                  id="email"
                  onChange={[Function]}
                  placeholder="Your email"
                  type="text"
                />
              </div>
              <div
                className="input-field col s12"
              >
                <input
                  id="password"
                  onChange={[Function]}
                  placeholder="Your password"
                  type="password"
                />
              </div>
              <div
                className="input-field col s12"
              >
                <button
                  className="btn"
                  type="submit"
                >
                  Submit
                </button>
                <p
                  className="red-text"
                >
                  
                </p>
              </div>
            </form>,
            "className": "login-form",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="input-field col s12"
                >
                  <input
                    id="email"
                    onChange={[Function]}
                    placeholder="Your email"
                    type="text"
                  />
                </div>,
                <div
                  className="input-field col s12"
                >
                  <input
                    id="password"
                    onChange={[Function]}
                    placeholder="Your password"
                    type="password"
                  />
                </div>,
                <div
                  className="input-field col s12"
                >
                  <button
                    className="btn"
                    type="submit"
                  >
                    Submit
                  </button>
                  <p
                    className="red-text"
                  >
                    
                  </p>
                </div>,
              ],
              "className": "row",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    id="email"
                    onChange={[Function]}
                    placeholder="Your email"
                    type="text"
                  />,
                  "className": "input-field col s12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "id": "email",
                    "onChange": [Function],
                    "placeholder": "Your email",
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    id="password"
                    onChange={[Function]}
                    placeholder="Your password"
                    type="password"
                  />,
                  "className": "input-field col s12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "id": "password",
                    "onChange": [Function],
                    "placeholder": "Your password",
                    "type": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <button
                      className="btn"
                      type="submit"
                    >
                      Submit
                    </button>,
                    <p
                      className="red-text"
                    >
                      
                    </p>,
                  ],
                  "className": "input-field col s12",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Submit",
                      "className": "btn",
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": "Submit",
                    "type": "button",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "",
                      "className": "red-text",
                    },
                    "ref": null,
                    "rendered": "",
                    "type": "p",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p>
              No account?
              <Link
                replace={false}
                title="Sign Up"
                to="/auth/signup"
              >
                 
                Sign up
              </Link>
            </p>,
            "className": "extra-info",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "No account?",
                <Link
                  replace={false}
                  title="Sign Up"
                  to="/auth/signup"
                >
                   
                  Sign up
                </Link>,
              ],
            },
            "ref": null,
            "rendered": Array [
              "No account?",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    " ",
                    "Sign up",
                  ],
                  "replace": false,
                  "title": "Sign Up",
                  "to": "/auth/signup",
                },
                "ref": null,
                "rendered": Array [
                  " ",
                  "Sign up",
                ],
                "type": [Function],
              },
            ],
            "type": "p",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Signup tests renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignUp
    fetch_data={[MockFunction]}
    history={
      Object {
        "goBack": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
    isLoggingIn={false}
    register_user={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="heading"
        >
          <h5>
            Join ReactPress
          </h5>
          <p>
            Sign up to share your story with the world, appreciate stories you love, and more.
          </p>
          <p>
            * Password must contain atleast one uppercase letter or one number. And must be atleast 6 characters long
          </p>
        </div>,
        <div
          className="login-form"
        >
          <form
            className="row"
            onSubmit={[Function]}
          >
            <div
              className="input-field col s12"
            >
              <input
                id="email"
                onChange={[Function]}
                placeholder="Your email"
                type="email"
              />
            </div>
            <div
              className="input-field col s12"
            >
              <input
                id="full_name"
                onChange={[Function]}
                placeholder="Your full name"
                type="text"
              />
            </div>
            <div
              className="input-field col s12"
            >
              <input
                className=" invalid"
                id="password"
                onChange={[Function]}
                placeholder="Your password"
                type="password"
              />
            </div>
            <div
              className="input-field col s12"
            >
              <button
                className="btn disabled"
                type="submit"
              >
                Submit
              </button>
              <p
                className="red-text"
              >
                
              </p>
            </div>
          </form>
        </div>,
        <div
          className="extra-info"
        >
          <p>
            Have an account?
            <Link
              replace={false}
              title="Sign Up"
              to="/auth/login"
            >
               
              Login
            </Link>
          </p>
        </div>,
      ],
      "className": "signup-section section center z-depth-1",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h5>
              Join ReactPress
            </h5>,
            <p>
              Sign up to share your story with the world, appreciate stories you love, and more.
            </p>,
            <p>
              * Password must contain atleast one uppercase letter or one number. And must be atleast 6 characters long
            </p>,
          ],
          "className": "heading",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Join ReactPress",
            },
            "ref": null,
            "rendered": "Join ReactPress",
            "type": "h5",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign up to share your story with the world, appreciate stories you love, and more.",
            },
            "ref": null,
            "rendered": "Sign up to share your story with the world, appreciate stories you love, and more.",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "* Password must contain atleast one uppercase letter or one number. And must be atleast 6 characters long",
            },
            "ref": null,
            "rendered": "* Password must contain atleast one uppercase letter or one number. And must be atleast 6 characters long",
            "type": "p",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <form
            className="row"
            onSubmit={[Function]}
          >
            <div
              className="input-field col s12"
            >
              <input
                id="email"
                onChange={[Function]}
                placeholder="Your email"
                type="email"
              />
            </div>
            <div
              className="input-field col s12"
            >
              <input
                id="full_name"
                onChange={[Function]}
                placeholder="Your full name"
                type="text"
              />
            </div>
            <div
              className="input-field col s12"
            >
              <input
                className=" invalid"
                id="password"
                onChange={[Function]}
                placeholder="Your password"
                type="password"
              />
            </div>
            <div
              className="input-field col s12"
            >
              <button
                className="btn disabled"
                type="submit"
              >
                Submit
              </button>
              <p
                className="red-text"
              >
                
              </p>
            </div>
          </form>,
          "className": "login-form",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="input-field col s12"
              >
                <input
                  id="email"
                  onChange={[Function]}
                  placeholder="Your email"
                  type="email"
                />
              </div>,
              <div
                className="input-field col s12"
              >
                <input
                  id="full_name"
                  onChange={[Function]}
                  placeholder="Your full name"
                  type="text"
                />
              </div>,
              <div
                className="input-field col s12"
              >
                <input
                  className=" invalid"
                  id="password"
                  onChange={[Function]}
                  placeholder="Your password"
                  type="password"
                />
              </div>,
              <div
                className="input-field col s12"
              >
                <button
                  className="btn disabled"
                  type="submit"
                >
                  Submit
                </button>
                <p
                  className="red-text"
                >
                  
                </p>
              </div>,
            ],
            "className": "row",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  id="email"
                  onChange={[Function]}
                  placeholder="Your email"
                  type="email"
                />,
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "email",
                  "onChange": [Function],
                  "placeholder": "Your email",
                  "type": "email",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  id="full_name"
                  onChange={[Function]}
                  placeholder="Your full name"
                  type="text"
                />,
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "full_name",
                  "onChange": [Function],
                  "placeholder": "Your full name",
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className=" invalid"
                  id="password"
                  onChange={[Function]}
                  placeholder="Your password"
                  type="password"
                />,
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": " invalid",
                  "id": "password",
                  "onChange": [Function],
                  "placeholder": "Your password",
                  "type": "password",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <button
                    className="btn disabled"
                    type="submit"
                  >
                    Submit
                  </button>,
                  <p
                    className="red-text"
                  >
                    
                  </p>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Submit",
                    "className": "btn disabled",
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Submit",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "",
                    "className": "red-text",
                  },
                  "ref": null,
                  "rendered": "",
                  "type": "p",
                },
              ],
              "type": "div",
            },
          ],
          "type": "form",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p>
            Have an account?
            <Link
              replace={false}
              title="Sign Up"
              to="/auth/login"
            >
               
              Login
            </Link>
          </p>,
          "className": "extra-info",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Have an account?",
              <Link
                replace={false}
                title="Sign Up"
                to="/auth/login"
              >
                 
                Login
              </Link>,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Have an account?",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  " ",
                  "Login",
                ],
                "replace": false,
                "title": "Sign Up",
                "to": "/auth/login",
              },
              "ref": null,
              "rendered": Array [
                " ",
                "Login",
              ],
              "type": [Function],
            },
          ],
          "type": "p",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="heading"
          >
            <h5>
              Join ReactPress
            </h5>
            <p>
              Sign up to share your story with the world, appreciate stories you love, and more.
            </p>
            <p>
              * Password must contain atleast one uppercase letter or one number. And must be atleast 6 characters long
            </p>
          </div>,
          <div
            className="login-form"
          >
            <form
              className="row"
              onSubmit={[Function]}
            >
              <div
                className="input-field col s12"
              >
                <input
                  id="email"
                  onChange={[Function]}
                  placeholder="Your email"
                  type="email"
                />
              </div>
              <div
                className="input-field col s12"
              >
                <input
                  id="full_name"
                  onChange={[Function]}
                  placeholder="Your full name"
                  type="text"
                />
              </div>
              <div
                className="input-field col s12"
              >
                <input
                  className=" invalid"
                  id="password"
                  onChange={[Function]}
                  placeholder="Your password"
                  type="password"
                />
              </div>
              <div
                className="input-field col s12"
              >
                <button
                  className="btn disabled"
                  type="submit"
                >
                  Submit
                </button>
                <p
                  className="red-text"
                >
                  
                </p>
              </div>
            </form>
          </div>,
          <div
            className="extra-info"
          >
            <p>
              Have an account?
              <Link
                replace={false}
                title="Sign Up"
                to="/auth/login"
              >
                 
                Login
              </Link>
            </p>
          </div>,
        ],
        "className": "signup-section section center z-depth-1",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h5>
                Join ReactPress
              </h5>,
              <p>
                Sign up to share your story with the world, appreciate stories you love, and more.
              </p>,
              <p>
                * Password must contain atleast one uppercase letter or one number. And must be atleast 6 characters long
              </p>,
            ],
            "className": "heading",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Join ReactPress",
              },
              "ref": null,
              "rendered": "Join ReactPress",
              "type": "h5",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sign up to share your story with the world, appreciate stories you love, and more.",
              },
              "ref": null,
              "rendered": "Sign up to share your story with the world, appreciate stories you love, and more.",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "* Password must contain atleast one uppercase letter or one number. And must be atleast 6 characters long",
              },
              "ref": null,
              "rendered": "* Password must contain atleast one uppercase letter or one number. And must be atleast 6 characters long",
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <form
              className="row"
              onSubmit={[Function]}
            >
              <div
                className="input-field col s12"
              >
                <input
                  id="email"
                  onChange={[Function]}
                  placeholder="Your email"
                  type="email"
                />
              </div>
              <div
                className="input-field col s12"
              >
                <input
                  id="full_name"
                  onChange={[Function]}
                  placeholder="Your full name"
                  type="text"
                />
              </div>
              <div
                className="input-field col s12"
              >
                <input
                  className=" invalid"
                  id="password"
                  onChange={[Function]}
                  placeholder="Your password"
                  type="password"
                />
              </div>
              <div
                className="input-field col s12"
              >
                <button
                  className="btn disabled"
                  type="submit"
                >
                  Submit
                </button>
                <p
                  className="red-text"
                >
                  
                </p>
              </div>
            </form>,
            "className": "login-form",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="input-field col s12"
                >
                  <input
                    id="email"
                    onChange={[Function]}
                    placeholder="Your email"
                    type="email"
                  />
                </div>,
                <div
                  className="input-field col s12"
                >
                  <input
                    id="full_name"
                    onChange={[Function]}
                    placeholder="Your full name"
                    type="text"
                  />
                </div>,
                <div
                  className="input-field col s12"
                >
                  <input
                    className=" invalid"
                    id="password"
                    onChange={[Function]}
                    placeholder="Your password"
                    type="password"
                  />
                </div>,
                <div
                  className="input-field col s12"
                >
                  <button
                    className="btn disabled"
                    type="submit"
                  >
                    Submit
                  </button>
                  <p
                    className="red-text"
                  >
                    
                  </p>
                </div>,
              ],
              "className": "row",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    id="email"
                    onChange={[Function]}
                    placeholder="Your email"
                    type="email"
                  />,
                  "className": "input-field col s12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "id": "email",
                    "onChange": [Function],
                    "placeholder": "Your email",
                    "type": "email",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    id="full_name"
                    onChange={[Function]}
                    placeholder="Your full name"
                    type="text"
                  />,
                  "className": "input-field col s12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "id": "full_name",
                    "onChange": [Function],
                    "placeholder": "Your full name",
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className=" invalid"
                    id="password"
                    onChange={[Function]}
                    placeholder="Your password"
                    type="password"
                  />,
                  "className": "input-field col s12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": " invalid",
                    "id": "password",
                    "onChange": [Function],
                    "placeholder": "Your password",
                    "type": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <button
                      className="btn disabled"
                      type="submit"
                    >
                      Submit
                    </button>,
                    <p
                      className="red-text"
                    >
                      
                    </p>,
                  ],
                  "className": "input-field col s12",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Submit",
                      "className": "btn disabled",
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": "Submit",
                    "type": "button",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "",
                      "className": "red-text",
                    },
                    "ref": null,
                    "rendered": "",
                    "type": "p",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p>
              Have an account?
              <Link
                replace={false}
                title="Sign Up"
                to="/auth/login"
              >
                 
                Login
              </Link>
            </p>,
            "className": "extra-info",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Have an account?",
                <Link
                  replace={false}
                  title="Sign Up"
                  to="/auth/login"
                >
                   
                  Login
                </Link>,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Have an account?",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    " ",
                    "Login",
                  ],
                  "replace": false,
                  "title": "Sign Up",
                  "to": "/auth/login",
                },
                "ref": null,
                "rendered": Array [
                  " ",
                  "Login",
                ],
                "type": [Function],
              },
            ],
            "type": "p",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`auth tests renders renders page correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    match={
      Object {
        "params": Object {
          "section": "",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "history": undefined,
      "section": "",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "history": undefined,
        "section": "",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`auth tests renders renders view correctly on false page section 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <View
    history={Object {}}
    section="error"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`auth tests renders renders view correctly on login page 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <View
    history={Object {}}
    section="login"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="auth"
      >
        <div
          className="container"
        >
          <Connect(Login)
            history={Object {}}
          />
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
        >
          <Connect(Login)
            history={Object {}}
          />
        </div>,
        "className": "auth",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Connect(Login)
            history={Object {}}
          />,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "history": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="auth"
        >
          <div
            className="container"
          >
            <Connect(Login)
              history={Object {}}
            />
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="container"
          >
            <Connect(Login)
              history={Object {}}
            />
          </div>,
          "className": "auth",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Connect(Login)
              history={Object {}}
            />,
            "className": "container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "history": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`auth tests renders renders view correctly on signup page section 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <View
    history={Object {}}
    section="signup"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="auth"
      >
        <div
          className="container"
        >
          <Connect(SignUp)
            history={Object {}}
          />
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
        >
          <Connect(SignUp)
            history={Object {}}
          />
        </div>,
        "className": "auth",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Connect(SignUp)
            history={Object {}}
          />,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "history": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="auth"
        >
          <div
            className="container"
          >
            <Connect(SignUp)
              history={Object {}}
            />
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="container"
          >
            <Connect(SignUp)
              history={Object {}}
            />
          </div>,
          "className": "auth",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Connect(SignUp)
              history={Object {}}
            />,
            "className": "container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "history": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
