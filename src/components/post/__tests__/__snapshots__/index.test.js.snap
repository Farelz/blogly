// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`post page index tests renders body correctly when fetching 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Body
    clap={[MockFunction]}
    comment={[MockFunction]}
    fetching={true}
    page_viewed={[MockFunction]}
    post_id=""
    posts={Array []}
    reply_comment={[MockFunction]}
    user={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="row"
      >
        <div
          className="col s12"
        >
          <Preloader />
        </div>
      </div>,
      "className": "post-body section container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="col s12"
        >
          <Preloader />
        </div>,
        "className": "row",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Preloader />,
          "className": "col s12",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="row"
        >
          <div
            className="col s12"
          >
            <Preloader />
          </div>
        </div>,
        "className": "post-body section container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="col s12"
          >
            <Preloader />
          </div>,
          "className": "row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Preloader />,
            "className": "col s12",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`post page index tests renders body correctly when not fetching 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Body
    clap={[MockFunction]}
    comment={[MockFunction]}
    fetching={false}
    page_viewed={[MockFunction]}
    post_id=""
    posts={Array []}
    reply_comment={[MockFunction]}
    user={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="row"
      >
        <div
          className="container"
        >
          <div
            className="center-align"
          >
            <img
              className="responsive-img"
              src="./src/img/404-Error.png"
            />
          </div>
          <h5
            className="center"
          >
            I suggest you
             
            <a
              onClick={[Function]}
              style={
                Object {
                  "cursor": "pointer",
                }
              }
            >
              go back
            </a>
          </h5>
        </div>
      </div>,
      "className": "post-body section container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
        >
          <div
            className="center-align"
          >
            <img
              className="responsive-img"
              src="./src/img/404-Error.png"
            />
          </div>
          <h5
            className="center"
          >
            I suggest you
             
            <a
              onClick={[Function]}
              style={
                Object {
                  "cursor": "pointer",
                }
              }
            >
              go back
            </a>
          </h5>
        </div>,
        "className": "row",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="center-align"
            >
              <img
                className="responsive-img"
                src="./src/img/404-Error.png"
              />
            </div>,
            <h5
              className="center"
            >
              I suggest you
               
              <a
                onClick={[Function]}
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              >
                go back
              </a>
            </h5>,
          ],
          "className": "container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                className="responsive-img"
                src="./src/img/404-Error.png"
              />,
              "className": "center-align",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "responsive-img",
                "src": "./src/img/404-Error.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "I suggest you",
                " ",
                <a
                  onClick={[Function]}
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  go back
                </a>,
              ],
              "className": "center",
            },
            "ref": null,
            "rendered": Array [
              "I suggest you",
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "go back",
                  "onClick": [Function],
                  "style": Object {
                    "cursor": "pointer",
                  },
                },
                "ref": null,
                "rendered": "go back",
                "type": "a",
              },
            ],
            "type": "h5",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="row"
        >
          <div
            className="container"
          >
            <div
              className="center-align"
            >
              <img
                className="responsive-img"
                src="./src/img/404-Error.png"
              />
            </div>
            <h5
              className="center"
            >
              I suggest you
               
              <a
                onClick={[Function]}
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              >
                go back
              </a>
            </h5>
          </div>
        </div>,
        "className": "post-body section container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="container"
          >
            <div
              className="center-align"
            >
              <img
                className="responsive-img"
                src="./src/img/404-Error.png"
              />
            </div>
            <h5
              className="center"
            >
              I suggest you
               
              <a
                onClick={[Function]}
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              >
                go back
              </a>
            </h5>
          </div>,
          "className": "row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="center-align"
              >
                <img
                  className="responsive-img"
                  src="./src/img/404-Error.png"
                />
              </div>,
              <h5
                className="center"
              >
                I suggest you
                 
                <a
                  onClick={[Function]}
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  go back
                </a>
              </h5>,
            ],
            "className": "container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  className="responsive-img"
                  src="./src/img/404-Error.png"
                />,
                "className": "center-align",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "responsive-img",
                  "src": "./src/img/404-Error.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "I suggest you",
                  " ",
                  <a
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    go back
                  </a>,
                ],
                "className": "center",
              },
              "ref": null,
              "rendered": Array [
                "I suggest you",
                " ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "go back",
                    "onClick": [Function],
                    "style": Object {
                      "cursor": "pointer",
                    },
                  },
                  "ref": null,
                  "rendered": "go back",
                  "type": "a",
                },
              ],
              "type": "h5",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`post page index tests renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Post
    match={
      Object {
        "params": Object {
          "id": "",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "id": "",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "id": "",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`post page index tests renders view correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <View
    id=""
    user_data={
      Object {
        "user": Object {},
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(TopBar)
          isPostPage={true}
        />,
        <Connect(Body)
          post_id=""
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "isPostPage": true,
          "user_data": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "post_id": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(TopBar)
            isPostPage={true}
          />,
          <Connect(Body)
            post_id=""
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "isPostPage": true,
            "user_data": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "post_id": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
