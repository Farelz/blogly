// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`nav bar unit tests renders 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NavBar
    imageData={
      Object {
        "image": "",
        "imageClass": "",
      }
    }
    isLoggedIn={false}
    isPostPage={false}
    logout={[MockFunction]}
    notifications_data={
      Object {
        "notifications": Array [],
        "unread_count": 0,
      }
    }
    readNotifications={[MockFunction]}
    stick={false}
    user_data={
      Object {
        "user": Object {},
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="nav-wrapper"
        >
          <a
            className="sidenav-trigger hide-on-med-and-up"
            data-target="mobile-topbar"
            href="#"
          >
            <MdMenu />
          </a>
          <Link
            className="brand-logo center"
            replace={false}
            to="/"
          >
            <span
              className="blog-title"
            >
              ReactPress
            </span>
          </Link>
          <ul
            className="right hide-on-small-only"
          >
            <React.Fragment>
              <li>
                <Link
                  className="sign-in"
                  replace={false}
                  to="/auth/login"
                >
                  Sign in
                </Link>
              </li>
              <li>
                <Link
                  className="sign-up btn"
                  replace={false}
                  to="/auth/signup"
                >
                  Get started
                </Link>
              </li>
            </React.Fragment>
          </ul>
        </div>,
        false,
      ],
      "className": "topbar nav-extended",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <a
              className="sidenav-trigger hide-on-med-and-up"
              data-target="mobile-topbar"
              href="#"
            >
              <MdMenu />
            </a>,
            <Link
              className="brand-logo center"
              replace={false}
              to="/"
            >
              <span
                className="blog-title"
              >
                ReactPress
              </span>
            </Link>,
            <ul
              className="right hide-on-small-only"
            >
              <React.Fragment>
                <li>
                  <Link
                    className="sign-in"
                    replace={false}
                    to="/auth/login"
                  >
                    Sign in
                  </Link>
                </li>
                <li>
                  <Link
                    className="sign-up btn"
                    replace={false}
                    to="/auth/signup"
                  >
                    Get started
                  </Link>
                </li>
              </React.Fragment>
            </ul>,
            false,
          ],
          "className": "nav-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <MdMenu />,
              "className": "sidenav-trigger hide-on-med-and-up",
              "data-target": "mobile-topbar",
              "href": "#",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <span
                className="blog-title"
              >
                ReactPress
              </span>,
              "className": "brand-logo center",
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "ReactPress",
                "className": "blog-title",
              },
              "ref": null,
              "rendered": "ReactPress",
              "type": "span",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <React.Fragment>
                <li>
                  <Link
                    className="sign-in"
                    replace={false}
                    to="/auth/login"
                  >
                    Sign in
                  </Link>
                </li>
                <li>
                  <Link
                    className="sign-up btn"
                    replace={false}
                    to="/auth/signup"
                  >
                    Get started
                  </Link>
                </li>
              </React.Fragment>,
              "className": "right hide-on-small-only",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <li>
                    <Link
                      className="sign-in"
                      replace={false}
                      to="/auth/login"
                    >
                      Sign in
                    </Link>
                  </li>,
                  <li>
                    <Link
                      className="sign-up btn"
                      replace={false}
                      to="/auth/signup"
                    >
                      Get started
                    </Link>
                  </li>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Link
                      className="sign-in"
                      replace={false}
                      to="/auth/login"
                    >
                      Sign in
                    </Link>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Sign in",
                      "className": "sign-in",
                      "replace": false,
                      "to": "/auth/login",
                    },
                    "ref": null,
                    "rendered": "Sign in",
                    "type": [Function],
                  },
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Link
                      className="sign-up btn"
                      replace={false}
                      to="/auth/signup"
                    >
                      Get started
                    </Link>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Get started",
                      "className": "sign-up btn",
                      "replace": false,
                      "to": "/auth/signup",
                    },
                    "ref": null,
                    "rendered": "Get started",
                    "type": [Function],
                  },
                  "type": "li",
                },
              ],
              "type": Symbol(react.fragment),
            },
            "type": "ul",
          },
          false,
        ],
        "type": "div",
      },
      false,
    ],
    "type": "nav",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="nav-wrapper"
          >
            <a
              className="sidenav-trigger hide-on-med-and-up"
              data-target="mobile-topbar"
              href="#"
            >
              <MdMenu />
            </a>
            <Link
              className="brand-logo center"
              replace={false}
              to="/"
            >
              <span
                className="blog-title"
              >
                ReactPress
              </span>
            </Link>
            <ul
              className="right hide-on-small-only"
            >
              <React.Fragment>
                <li>
                  <Link
                    className="sign-in"
                    replace={false}
                    to="/auth/login"
                  >
                    Sign in
                  </Link>
                </li>
                <li>
                  <Link
                    className="sign-up btn"
                    replace={false}
                    to="/auth/signup"
                  >
                    Get started
                  </Link>
                </li>
              </React.Fragment>
            </ul>
          </div>,
          false,
        ],
        "className": "topbar nav-extended",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <a
                className="sidenav-trigger hide-on-med-and-up"
                data-target="mobile-topbar"
                href="#"
              >
                <MdMenu />
              </a>,
              <Link
                className="brand-logo center"
                replace={false}
                to="/"
              >
                <span
                  className="blog-title"
                >
                  ReactPress
                </span>
              </Link>,
              <ul
                className="right hide-on-small-only"
              >
                <React.Fragment>
                  <li>
                    <Link
                      className="sign-in"
                      replace={false}
                      to="/auth/login"
                    >
                      Sign in
                    </Link>
                  </li>
                  <li>
                    <Link
                      className="sign-up btn"
                      replace={false}
                      to="/auth/signup"
                    >
                      Get started
                    </Link>
                  </li>
                </React.Fragment>
              </ul>,
              false,
            ],
            "className": "nav-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <MdMenu />,
                "className": "sidenav-trigger hide-on-med-and-up",
                "data-target": "mobile-topbar",
                "href": "#",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <span
                  className="blog-title"
                >
                  ReactPress
                </span>,
                "className": "brand-logo center",
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "ReactPress",
                  "className": "blog-title",
                },
                "ref": null,
                "rendered": "ReactPress",
                "type": "span",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <React.Fragment>
                  <li>
                    <Link
                      className="sign-in"
                      replace={false}
                      to="/auth/login"
                    >
                      Sign in
                    </Link>
                  </li>
                  <li>
                    <Link
                      className="sign-up btn"
                      replace={false}
                      to="/auth/signup"
                    >
                      Get started
                    </Link>
                  </li>
                </React.Fragment>,
                "className": "right hide-on-small-only",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <li>
                      <Link
                        className="sign-in"
                        replace={false}
                        to="/auth/login"
                      >
                        Sign in
                      </Link>
                    </li>,
                    <li>
                      <Link
                        className="sign-up btn"
                        replace={false}
                        to="/auth/signup"
                      >
                        Get started
                      </Link>
                    </li>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Link
                        className="sign-in"
                        replace={false}
                        to="/auth/login"
                      >
                        Sign in
                      </Link>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Sign in",
                        "className": "sign-in",
                        "replace": false,
                        "to": "/auth/login",
                      },
                      "ref": null,
                      "rendered": "Sign in",
                      "type": [Function],
                    },
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Link
                        className="sign-up btn"
                        replace={false}
                        to="/auth/signup"
                      >
                        Get started
                      </Link>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Get started",
                        "className": "sign-up btn",
                        "replace": false,
                        "to": "/auth/signup",
                      },
                      "ref": null,
                      "rendered": "Get started",
                      "type": [Function],
                    },
                    "type": "li",
                  },
                ],
                "type": Symbol(react.fragment),
              },
              "type": "ul",
            },
            false,
          ],
          "type": "div",
        },
        false,
      ],
      "type": "nav",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`topbar tests renders correctly when logged in 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TopBar
    isPostPage={false}
    logout={[MockFunction]}
    notifications={Object {}}
    readNotifications={[MockFunction]}
    user_data={
      Object {
        "user": Object {},
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <NavBar
          imageData={
            Object {
              "image": undefined,
              "imageClass": "",
            }
          }
          isLoggedIn={true}
          isPostPage={true}
          logout={[Function]}
          notifications_data={Object {}}
          readNotifications={[Function]}
          stick={false}
        />,
        <SideNav
          data={
            Object {
              "image": undefined,
              "imageClass": "",
              "isLoggedIn": true,
              "username": undefined,
            }
          }
          logout={[Function]}
        />,
      ],
      "className": "navbar-wrapper",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "imageData": Object {
            "image": undefined,
            "imageClass": "",
          },
          "isLoggedIn": true,
          "isPostPage": true,
          "logout": [Function],
          "notifications_data": Object {},
          "readNotifications": [Function],
          "stick": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "data": Object {
            "image": undefined,
            "imageClass": "",
            "isLoggedIn": true,
            "username": undefined,
          },
          "logout": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <NavBar
            imageData={
              Object {
                "image": undefined,
                "imageClass": "",
              }
            }
            isLoggedIn={true}
            isPostPage={true}
            logout={[Function]}
            notifications_data={Object {}}
            readNotifications={[Function]}
            stick={false}
          />,
          <SideNav
            data={
              Object {
                "image": undefined,
                "imageClass": "",
                "isLoggedIn": true,
                "username": undefined,
              }
            }
            logout={[Function]}
          />,
        ],
        "className": "navbar-wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "imageData": Object {
              "image": undefined,
              "imageClass": "",
            },
            "isLoggedIn": true,
            "isPostPage": true,
            "logout": [Function],
            "notifications_data": Object {},
            "readNotifications": [Function],
            "stick": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "data": Object {
              "image": undefined,
              "imageClass": "",
              "isLoggedIn": true,
              "username": undefined,
            },
            "logout": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`topbar tests renders correctly when logged out 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TopBar
    isPostPage={false}
    logout={[MockFunction]}
    notifications={Object {}}
    readNotifications={[MockFunction]}
    user_data={
      Object {
        "user": Object {},
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <NavBar
          imageData={
            Object {
              "image": undefined,
              "imageClass": "",
            }
          }
          isLoggedIn={true}
          isPostPage={true}
          logout={[Function]}
          notifications_data={Object {}}
          readNotifications={[Function]}
          stick={false}
        />,
        <SideNav
          data={
            Object {
              "image": undefined,
              "imageClass": "",
              "isLoggedIn": true,
              "username": undefined,
            }
          }
          logout={[Function]}
        />,
      ],
      "className": "navbar-wrapper",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "imageData": Object {
            "image": undefined,
            "imageClass": "",
          },
          "isLoggedIn": true,
          "isPostPage": true,
          "logout": [Function],
          "notifications_data": Object {},
          "readNotifications": [Function],
          "stick": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "data": Object {
            "image": undefined,
            "imageClass": "",
            "isLoggedIn": true,
            "username": undefined,
          },
          "logout": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <NavBar
            imageData={
              Object {
                "image": undefined,
                "imageClass": "",
              }
            }
            isLoggedIn={true}
            isPostPage={true}
            logout={[Function]}
            notifications_data={Object {}}
            readNotifications={[Function]}
            stick={false}
          />,
          <SideNav
            data={
              Object {
                "image": undefined,
                "imageClass": "",
                "isLoggedIn": true,
                "username": undefined,
              }
            }
            logout={[Function]}
          />,
        ],
        "className": "navbar-wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "imageData": Object {
              "image": undefined,
              "imageClass": "",
            },
            "isLoggedIn": true,
            "isPostPage": true,
            "logout": [Function],
            "notifications_data": Object {},
            "readNotifications": [Function],
            "stick": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "data": Object {
              "image": undefined,
              "imageClass": "",
              "isLoggedIn": true,
              "username": undefined,
            },
            "logout": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
